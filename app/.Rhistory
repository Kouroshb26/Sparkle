shiny::runApp('~/GitHub/Sparkle/app')
LangDiamondFiles <- c(paste0("../Similarity Analysis/LangDiamondResults/",c("ERR126028.Allignment.txt","ERR126028_1.Allignment.txt","ERR126028_2.Allignment.txt","ERR126029.Allignment.txt","ERR126029_1.Allignment.txt","ERR126029_2.Allignment.txt")))
diamondFile = LangDiamondFiles[1]
diamond <- fread(diamondFile,header = FALSE,stringsAsFactors = FALSE,data.table = FALSE)
colnames(diamond) <- c("Query","Reference","%id","length","mistmatches","gaps","q.start","q.end","s.start","s.end","Diamondevalue","DiamondScore")
if(bestAllignment){
diamond <-   data.frame(diamond %>%
group_by(Query) %>%
filter(DiamondScore == max(DiamondScore)))
}
diamond <- fread(diamondFile,header = FALSE,stringsAsFactors = FALSE,data.table = FALSE)
# install.packages("tidyverse")
# install.packages("shiny")
# install.packages("data.table")
# install.packages("seqinr")
# source("https://bioconductor.org/biocLite.R")
# biocLite("ggbio")
# install.packages("shinyBS")
# install.packages("shinyjs")
# install.packages("plotly")
#install.packages("ggiraph")
library(shiny)
library(data.table)
library(plyr)
library(dplyr)
library(seqinr)
library(ggbio)
library(GenomicRanges)
library(plotly)
library(shinyBS)
library(shinyjs)
diamond <- fread(diamondFile,header = FALSE,stringsAsFactors = FALSE,data.table = FALSE)
colnames(diamond) <- c("Query","Reference","%id","length","mistmatches","gaps","q.start","q.end","s.start","s.end","Diamondevalue","DiamondScore")
if(bestAllignment){
diamond <-   data.frame(diamond %>%
group_by(Query) %>%
filter(DiamondScore == max(DiamondScore)))
}
diamond <-   data.frame(diamond %>%
group_by(Query) %>%
filter(DiamondScore == max(DiamondScore)))
diamondGRanges <- makeGRangesFromDataFrame(diamond,seqnames.field= "Reference",start.field = "s.start",end.field ="s.end")
mcols(diamondGRanges)$Score <- diamond$DiamondScore
mcols(diamondGRanges)$Query <- diamond$Query
diamondGRanges
mcols(diamondGRanges)$file <- "ERR"
diamondGRanges
mcols(diamondGRanges)$file <- basename(diamondFile)
diamondGRanges
read.fastq
read.fasta
?read.fasta
runApp()
knitr::opts_chunk$set(echo = TRUE)
load("../app/LangCelegansMMseqs2Granges.Rdata")
diamondGRanges
"ERR126028.Allignment.txt".split()
hello = "ERR126028.Allignment.txt"
hello.split(",")
split(hello,",");
split(hello,".");
split(hello,".",TRUE)
strsplit(hello,".")
strsplit(hello,".",TRUE)
runApp()
paste0(strsplit(hello,".",TRUE),".fastq")
paste0(strsplit(hello,".",TRUE)[1],".fastq")
strsplit(hello,".",TRUE)[1]
strsplit(hello,".",TRUE)
strsplit(hello,".",TRUE)[[1]][1]
runApp()
paste0(strsplit(hello,".",TRUE)[[1]][1],".fastq")
runApp()
load("../app/LangCelegansMMseqs2Granges.Rdata")
View(diamondGRanges)
diamondGRanges
paste0(strsplit(hello[[1]][1],".",TRUE)[1],".fastq")
paste0(strsplit(hello,".",TRUE)[[1]][1],".fastq")
runApp()
runApp()
load("../app/LangCelegansMMseqs2Granges.Rdata")
diamondGRanges
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
length(splitDiamond)
splitDiamond
splitDiamond$Query
splitDiamond$EOG091H0002$Query
splitDiamond$EOG091H0002$Query[2020]
splitDiamond$EOG091H0002$Query[2021]
splitDiamond$EOG091H0002$Query[2021:2500]
hello = splitDiamond$EOG091H0002$Query
View(hello)
split)splitDiamond$EOG091H0002,by="Query")
split(splitDiamond$EOG091H0002,by="Query")
split(splitDiamond$EOG091H0002,list(splitDiamond$EOG091H0002$Query))
runApp()
load("../app/LangCelegansMMseqs2Granges.Rdata")
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
splitDiamond <- split(diamondGRanges,diamondGRanges$file)
split
split[[1]]
splitDiamond
splitDiamond[[1]]
splitDiamond[[2]]
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
splitDiamond <- split(splitDiamond,diamondGRanges$file)
splitDiamond
splitDiamond[[1]]
splitDiamond[1]
View(splitDiamond)
splitDiamond[[1]][[1]]
splitDiamond[[1]][1]
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
?apply
apply(splitDiamond[1:4],1,saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
print(splitx[1])
}
apply(splitDiamond[1:4],1,saveFiles)
splitDiamond[1:4]
lapply(splitDiamond[1:4],1,saveFiles)
lapply(splitDiamond[1:4],saveFiles)
lapply(splitDiamond[1:4],saveFiles)
load("../app/LangCelegansMMseqs2Granges.Rdata")
lapply(splitDiamond[1:4],saveFiles)
?lapply
which lapply
lapply
saveFiles <- function(x){
splitx = split(x,x$file)
splitx[[1]]
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
x = splitDiamond[1]
x
x = splitDiamond[[1]]
x
splitx = split(x,x$file)
splitx
splitx[[1]]
?write.table
splitx[[2]]
j <- splitx[[2]]
j <- splitx[[2]]$Query
strsplit(j,".")
strsplit(j,".",TRUE)
strsplit(j,".",TRUE)[2]
strsplit(j,".",TRUE)[[]][2]
sapply(strsplit(j,".",TRUE), "[[", 2)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1]),quote=FALSE,row.names = FALSE,col.names = FALSE,)
})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
getwd()
lapply(splitDiamond[1:4],saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1]),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
lapply(splitDiamond[1:4],saveFiles)
"hello"[1]
"hello"[[1]]
runApp()
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0("readAllignments/",seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
lapply(splitDiamond[1:4],saveFiles)
getwd()
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0("readAllignments/",seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0("readAllignments/",seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0("./readAllignments/",seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
lapply(splitDiamond[1:4],saveFiles)
?write.table
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0("readAllignments\\",seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
load("../app/LangCelegansMMseqs2Granges.Rdata")
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
lapply(splitDiamond[1:4],saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
print("sup")
write.table(sapply(strsplit(j,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
diamondGRanges
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
lapply(splitDiamond[1:4],saveFiles)
x= splitDiamond[1]
splitx = split(x,x$file)
x= splitDiamond[1]
x
splitx = split(x,x$file)
x= splitDiamond[[1]]
splitx = split(x,x$file)
x <-  splitx[[1]]
x
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
sapply(strsplit(x$Query,".",TRUE)
)
sapply(strsplit(x$Query,".",TRUE), "[[", 2)
paste0(seqnames(x)[1],".",x$file[1],".txt")
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
rm(x)
rm(j)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:4],saveFiles)
lapply(splitDiamond[[1:4]],saveFiles)
lapply(splitDiamond,saveFiles)
print(splitDiamond[1])
print(splitDiamond[[1])
print(splitDiamond[[1]])
knitr::opts_chunk$set(echo = TRUE)
lapply(splitDiamond[1:4],saveFiles)
splitDiamond[1:4]
splitDiamond[1]
splitDiamond[[1]
splitDiamond[[1]]
splitDiamond[[1]]
splitDiamond[1]
print(splitDiamond[[1]])
print(splitDiamond[1])
str(splitDiamond)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){
print("hello")
print(sapply(strsplit(x$Query,".",TRUE), "[[", 2))
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
lapply(splitDiamond[1:4],saveFiles)
x = splitDiamond[1]
splitx = split(x,x$file)
x = splitDiamond[[1]]
splitx = split(x,x$file)
x = splitx[[1]]
x
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){ write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)})
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
lapply(splitDiamond[1:4],saveFiles)
saveFiles <- function(x){
splitx = split(x,x$file)
lapply(splitx,function(x){write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)})
}
lapply(splitDiamond[1:4],saveFiles)
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
saveFiles <- function(x){
lapply(split(x,x$file),function(x){
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
}
lapply(splitDiamond[1:4],saveFiles)
lapply(splitDiamond[1:2],saveFiles)
saveFiles <- function(x){
lapply(split(x,x$file),function(x){
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
return("hello")
}
lapply(splitDiamond[1:2],saveFiles)
saveFiles <- function(x){
lapply(split(x,x$file),function(x){
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
return("Passed")
}
load("../app/LangCelegansMMseqs2Granges.Rdata")
load("../app/LangCelegansMMseqs2Granges.Rdata")
splitDiamond <- split(diamondGRanges,seqnames(diamondGRanges))
lapply(splitDiamond[1:2],saveFiles)
saveFiles <- function(x){
lapply(split(x,x$file),function(x){
print(paste0(seqnames(x)[1],".",x$file[1],".txt"))
write.table(sapply(strsplit(x$Query,".",TRUE), "[[", 2),paste0(seqnames(x)[1],".",x$file[1],".txt"),quote=FALSE,row.names = FALSE,col.names = FALSE)
})
return("Passed")
}
lapply(splitDiamond[1:2],saveFiles)
