knitr::opts_chunk$set(echo = TRUE)
library(GenomicRanges)
library(data.table)
library(plyr)
library(dplyr)
library(seqinr)
calculateTotalCoverage <- function(coverage){
totalCoverage <- coverage[,3]
totalCoverage <- totalCoverage[(totalCoverage > 10 & totalCoverage<=200)]   #Limited the data so it is easier to see the main parts of it. We can also limit the data later on as well.
totalCoverage <- as.data.frame(totalCoverage)
return(totalCoverage)
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
library(ggplot2)
PercentAAGreaterThan <- function(diamondGRanges,proteinFile){
coverage <- as.data.frame(coverage(diamondGRanges))
totalCoverage <- calculateTotalCoverage(coverage)
threholdCoverage <- getmode(totalCoverage[,1])
pertcentAAGreaterThanThreshold <-   coverage[,c(2,3)] %>%
group_by(group_name) %>%
filter(value >= threholdCoverage)%>%
tally()
pertcentAAGreaterThanThreshold$Length <- as.vector(seqlengths(diamondGRanges)[pertcentAAGreaterThanThreshold$group_name])
pertcentAAGreaterThanThreshold <- data.frame(mutate(pertcentAAGreaterThanThreshold,Percentcov=n/Length*100))
pertcentAAGreaterThanThreshold <- left_join(data.frame(group_name = names(read.fasta(proteinFile))),pertcentAAGreaterThanThreshold)
pertcentAAGreaterThanThreshold$Percentcov[is.na(pertcentAAGreaterThanThreshold$Percentcov)] = 0
return(pertcentAAGreaterThanThreshold)
}
getModeGranges <- function(diamondGRanges,proteinFile){
coverage <- as.data.frame(coverage(diamondGRanges))
totalCoverage <- calculateTotalCoverage(coverage)
threholdCoverage <- getmode(totalCoverage[,1])
return(threholdCoverage)
}
load("../app/LangCelegansBuscoGranges.Rdata")
LangeCelegans <- PercentAAGreaterThan(diamondGRanges,"../Similarity Analysis/BuscoCelegans.fasta")
LangeCelegansCV <- getModeGranges(diamondGRanges,"../Similarity Analysis/BuscoCelegans.fasta")
load("../app/LangBuscoGranges.Rdata")
LangBusco <- PercentAAGreaterThan(diamondGRanges,"../Similarity Analysis/BuscoProteinSet.fa")
